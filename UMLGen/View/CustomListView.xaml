<UserControl x:Class="UMLGen.View.CustomListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
			 xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:local="clr-namespace:UMLGen.View"
             mc:Ignorable="d"
			 d:DesignHeight="100" d:DesignWidth="100">

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical" DockPanel.Dock="Left" Width="130" Margin="0,0,0,0" ToolBarTray.IsLocked="True" ToolBar.OverflowMode="Never">


        <ListView DockPanel.Dock="Left" x:Name="toolBar" Width="130" ToolBarTray.IsLocked="True" ToolBar.OverflowMode="Never" Margin="0,0,0,0">

            <Image Source="/Images/Square.PNG" Name="Square" Height="75" Width="75" ToolTip="Drag this into the canvas to make a square">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <cmd:EventToCommand Command="{Binding DataContext.DdMouseMoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>

            <Image Source="/Images/UMLClass.PNG" Name="UMLClass" Height="75" Width="75" ToolTip="Drag this into the canvas to make a UML Class">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <cmd:EventToCommand Command="{Binding DataContext.DdMouseMoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
            
            <Image Source="/Images/Ellipse.PNG" Name="Ellipse" Height="75" Width="75" ToolTip="Drag this into the canvas to make a Circle">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <cmd:EventToCommand Command="{Binding DataContext.DdMouseMoveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
        </ListView>

        <ListView Visibility="Collapsed" Name="SquareMenu">
            <TextBlock Text="Square selected"/>
            <TextBlock Text="Height:"/>
            <TextBox AcceptsReturn="False" Text="100" Name="SquareHeightBox">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTextInput">
                        <cmd:EventToCommand Command="{Binding DataContext.IsTextAllowed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.OnHeightChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="Width:"/>
            <TextBox AcceptsReturn="False" Text="100" Name="SquareWidthBox">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTextInput">
                        <cmd:EventToCommand Command="{Binding DataContext.IsTextAllowed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.OnWidthChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </ListView>

        <ListView Visibility="Collapsed" Name="UMLMenu">
            <TextBlock Text="UMLClass selected"/>
            <TextBlock Text="Class name:"/>
            <TextBox AcceptsReturn="True" Text="ExampleClass" Name="ClassUML">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.OnUMLChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="Field name:"/>
            <TextBox AcceptsReturn="True" Text="exampleMethod &#x0a;toString" Name="FieldUML">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.OnUMLChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="Method name:"/>
            <TextBox AcceptsReturn="True" Text="String Name &#x0a;Int no" Name="MethodUML">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.OnUMLChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </ListView>

        <ListView Visibility="Collapsed" Name="EllipseMenu">
            <TextBlock Text="Ellipse selected"/>
            <TextBlock Text="Height:"/>
            <TextBox AcceptsReturn="False" Text="100" Name="HeightEllipse">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.OnHeightChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBlock Text="Width:"/>
            <TextBox AcceptsReturn="False" Text="100" Name="WidthEllipse">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewTextInput">
                        <cmd:EventToCommand Command="{Binding DataContext.IsTextAllowed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="TextChanged">
                        <cmd:EventToCommand Command="{Binding DataContext.OnWidthChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </ListView>

    </StackPanel>
    </ScrollViewer>
</UserControl>
