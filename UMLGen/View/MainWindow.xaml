<Window x:Class="UMLGen.MainWindow"
        x:Name="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:Model="clr-namespace:UMLGen.Model"
		xmlns:View="clr-namespace:UMLGen.View"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        mc:Ignorable="d ignore"
        Height="600"
        Width="800"
        Title="UMLGen"
        DataContext="{Binding Main, Source={StaticResource Locator}}">

    <!-- 
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    -->
    <DockPanel HorizontalAlignment="Left" LastChildFill="True" Width="Auto">
        <View:CustomListView x:Name="SideBar"/>
        <Menu DockPanel.Dock="Top" x:Name="menu" VerticalAlignment="Top" Margin="-130,0,0,0" Width="{Binding ElementName=Window, Path=ActualWidth}" Height="30" >
            <MenuItem Header="_File" Height="30" Width="70" Margin="10,0,0,0">
                <MenuItem Header="_New" Command="{Binding NewDiagramCommand}" />
                <MenuItem Header="_Open" Command="{Binding LoadDiagramCommand}"/>
                <MenuItem Header="_Save" Command="{Binding SaveCurrentCommand}"/>
                <MenuItem Header="_Save as" Command="{Binding SaveCurrentAsCommand}"/>
            </MenuItem>
            <MenuItem Header="_Edit" Height="30" Width="70" Margin="10,0,0,0">
                <MenuItem Header="_Copy" Command="{Binding CopyShapeCommand}"/>
                <MenuItem Header="_Cut" Command="{Binding CutShapeCommand}"/>
                <MenuItem Header="_Paste" Command="{Binding PasteShapeCommand}"/>
                <MenuItem Header="_Undo" Command="{Binding UndoCommand}"/>
                <MenuItem Header="_Redo" Command="{Binding RedoCommand}"/>
                <MenuItem Header="_Delete"  Command="{Binding RemoveShapeCommand}" />
            </MenuItem>
        </Menu>
        <ToolBar DockPanel.Dock="Top" x:Name="toolBar1" Height="40" ToolBarTray.IsLocked="True" Margin="-135,0,0,0" ToolBar.OverflowMode="Never" Width="{Binding ElementName=Window, Path=ActualWidth}">
            <Button x:Name="CopyBtn" Height="30" Command="{Binding CopyShapeCommand}" ToolTip="Copy selection to clipboard" VerticalAlignment="Center" Width="75">
                <Image Source="/Images/Copy.png"  />
            </Button>
            <Button x:Name="CutBtn" Height="30" Command="{Binding CutShapeCommand}"   ToolTip="Cut selection to clipboard" VerticalAlignment="Center" Width="75" >
                <Image Source="/Images/Cut.png" />
            </Button>
            <Button x:Name="PasteBtn" Height="30" Command="{Binding PasteShapeCommand}"  ToolTip="Pastes the element in the clipboard" VerticalAlignment="Center" Width="75">
                <Image Source="/Images/Paste.png" />
            </Button>
            <Button x:Name="AddUML" Height="30" Command="{Binding AddUMLCommand}"  ToolTip="Adds a new UML element" VerticalAlignment="Center" Width="75">
                <Image Source="/Images/Plus.png" />
            </Button>
            <Button x:Name="AddSquare" Height="30" Command="{Binding AddSquareCommand}"  ToolTip="Adds a new square" VerticalAlignment="Center" Width="75">
                <Image Source="/Images/Plus.png" />
            </Button>
            <Button x:Name="AddCircle" Height="30" Command="{Binding AddElipseCommand}" ToolTip="Adds a new circle" VerticalAlignment="Center" Width="75">
                <Image Source="/Images/Plus.png" />
            </Button>
        </ToolBar>

        <StatusBar DockPanel.Dock="Bottom" Height="20" VerticalAlignment="Top" HorizontalAlignment="Center" Width="{Binding ElementName=Window, Path=ActualWidth}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="1" >
                <TextBlock Text="{Binding StatusBar.Status}" />
            </StatusBarItem>
        </StatusBar>

        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <ItemsControl ItemsSource="{Binding Shapes}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>

                        <Canvas Height="3000" Width="3000" Background="GhostWhite" AllowDrop="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Drop">
                                    <cmd:EventToCommand Command="{Binding DataContext.DdDropCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="DragEnter">
                                    <cmd:EventToCommand Command="{Binding DataContext.DdDragEnterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="DragLeave">
                                    <cmd:EventToCommand Command="{Binding DataContext.DdDragExitCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="DragOver">
                                    <cmd:EventToCommand Command="{Binding DataContext.DdDragOverCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Canvas>

                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </ScrollViewer>

    </DockPanel>


    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="Z" Command="{Binding UndoCommand}"/>
        <!-- Undo Keybind -->
        <KeyBinding Modifiers="Ctrl" Key="Y" Command="{Binding RedoCommand}"/>
        <!-- Redo Keybind -->
        <KeyBinding Key="Esc" Command="{Binding DeselectShapeCommand}" />
        <!-- Deselect Keybind -->
        <KeyBinding Key="Backspace" Command="{Binding RemoveShapeCommand}" />
        <!-- Delete Keybind-->
        <KeyBinding Key="Delete" Command="{Binding RemoveShapeCommand}" />
        <!-- Delete Keybind -->
        <KeyBinding Modifiers="Ctrl" Key="X" Command="{Binding CutShapeCommand}"/>
        <!-- Cut Keybind -->
        <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding CopyShapeCommand}"/>
        <!-- Copy Keybind -->
        <KeyBinding Modifiers="Ctrl" Key="V" Command="{Binding PasteShapeCommand}"/>
        <!-- Paste Keybind -->
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCurrentCommand}"/>
        <!-- Save Current Keybind -->
        <KeyBinding Key="F12" Command="{Binding SaveCurrentAsCommand}" />
        <!-- Save As Keybind -->
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding LoadDiagramCommand}" />
        <!-- Open Diagram Keybind -->
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewDiagramCommand}" />
        <!-- New Diagram Keybind -->
    </Window.InputBindings>


</Window>
